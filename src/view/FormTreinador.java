/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleTreinador;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Treinador;
import org.eclipse.persistence.exceptions.DatabaseException;
import util.Conversoes;
import util.LimitText;

/**
 *
 * @author abner
 */
public class FormTreinador extends javax.swing.JDialog {

    private ControleTreinador cp = new ControleTreinador();
    private File file;
    private ArrayList<Treinador> listaPesquisa = new ArrayList();
    private Treinador selecionado;
    private int menuSelection = 0;

    public FormTreinador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        this.setLocationRelativeTo(null);
        labelImagem1.setVisible(false);
    }

    private void atualizaTabela() {
        listaPesquisa.clear();
        listaPesquisa.addAll(cp.findByNome(txtPesquisa.getText()));
        DefaultTableModel dtm = (DefaultTableModel) tableTreinadores.getModel();
        dtm.setNumRows(0);
        for (Treinador s : listaPesquisa) {
            dtm.addRow(new Object[]{s.getCodigo(), s.getNome(), s.getEspecialidade(), Conversoes.getStringOfTime(s.getHrEntrada()) + " - " + Conversoes.getStringOfTime(s.getHrSaida())});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botMenuExcluir = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        botMenuAdicionar = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        botMenuAlterar = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        cardPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        txtPesquisa = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        mGradientButton1 = new com.hq.swingmaterialdesign.materialdesign.MGradientButton();
        tablePanel = new javax.swing.JScrollPane();
        tableTreinadores = new javax.swing.JTable();
        btnExit = new com.hq.swingmaterialdesign.materialdesign.MButton();
        formPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        mButton4 = new com.hq.swingmaterialdesign.materialdesign.MButton();
        txtNome = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        botCancelar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        botConfirmar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        profileImagePanel = new com.hq.swingmaterialdesign.materialdesign.MGradientPanel();
        labelImagem1 = new javax.swing.JLabel();
        txtNascimento = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtTelefone = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtNumero = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtCidade = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtBairro = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtRua = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtLogin = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtSenha = new com.hq.swingmaterialdesign.materialdesign.MPasswordField();
        txtConfirmar = new com.hq.swingmaterialdesign.materialdesign.MPasswordField();
        txtRg = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtCpf = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtEmail = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtEntrada = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtSaida = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtSalario = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtCref = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        txtEspecialidade = new com.hq.swingmaterialdesign.materialdesign.MTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(37, 46, 55));
        sidePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TREINADOR");
        sidePanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 26, 230, 40));

        botMenuExcluir.setBorder(null);
        botMenuExcluir.setForeground(new java.awt.Color(255, 255, 255));
        botMenuExcluir.setText("Excluir");
        botMenuExcluir.setEndColor(new java.awt.Color(37, 46, 55));
        botMenuExcluir.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        botMenuExcluir.setHoverEndColor(new java.awt.Color(37, 46, 55));
        botMenuExcluir.setHoverStartColor(new java.awt.Color(0, 153, 153));
        botMenuExcluir.setSelectedColor(new java.awt.Color(0, 153, 153));
        botMenuExcluir.setStartColor(new java.awt.Color(37, 46, 55));
        botMenuExcluir.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        botMenuExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botMenuExcluirActionPerformed(evt);
            }
        });
        sidePanel.add(botMenuExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 230, 50));

        botMenuAdicionar.setBorder(null);
        botMenuAdicionar.setForeground(new java.awt.Color(255, 255, 255));
        botMenuAdicionar.setText("Adicionar");
        botMenuAdicionar.setEndColor(new java.awt.Color(37, 46, 55));
        botMenuAdicionar.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        botMenuAdicionar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        botMenuAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        botMenuAdicionar.setHoverEndColor(new java.awt.Color(37, 46, 55));
        botMenuAdicionar.setHoverStartColor(new java.awt.Color(0, 153, 153));
        botMenuAdicionar.setSelectedColor(new java.awt.Color(0, 153, 153));
        botMenuAdicionar.setStartColor(new java.awt.Color(37, 46, 55));
        botMenuAdicionar.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        botMenuAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botMenuAdicionarActionPerformed(evt);
            }
        });
        sidePanel.add(botMenuAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 230, 50));

        botMenuAlterar.setBorder(null);
        botMenuAlterar.setForeground(new java.awt.Color(255, 255, 255));
        botMenuAlterar.setText("Alterar");
        botMenuAlterar.setEndColor(new java.awt.Color(37, 46, 55));
        botMenuAlterar.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        botMenuAlterar.setHoverEndColor(new java.awt.Color(37, 46, 55));
        botMenuAlterar.setHoverStartColor(new java.awt.Color(0, 153, 153));
        botMenuAlterar.setSelectedColor(new java.awt.Color(0, 153, 153));
        botMenuAlterar.setStartColor(new java.awt.Color(37, 46, 55));
        botMenuAlterar.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        botMenuAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botMenuAlterarActionPerformed(evt);
            }
        });
        sidePanel.add(botMenuAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 230, 50));

        bg.add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 670));

        cardPanel.setLayout(new java.awt.CardLayout());

        dataPanel.setBackground(new java.awt.Color(255, 255, 255));
        dataPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchPanel.setBackground(new java.awt.Color(50, 60, 69));

        txtPesquisa.setBackground(new java.awt.Color(50, 60, 69));
        txtPesquisa.setForeground(new java.awt.Color(240, 240, 240));
        txtPesquisa.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        txtPesquisa.setLabel("Pesquisar");
        txtPesquisa.setSelectionColor(new java.awt.Color(0, 153, 153));

        mGradientButton1.setForeground(new java.awt.Color(204, 204, 204));
        mGradientButton1.setText(String.valueOf(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.SEARCH));
        mGradientButton1.setBorderRadius(58);
        mGradientButton1.setEndColor(new java.awt.Color(50, 60, 69));
        mGradientButton1.setFont(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.ICON_FONT.deriveFont(26f));
        mGradientButton1.setHoverEndColor(new java.awt.Color(50, 60, 69));
        mGradientButton1.setHoverStartColor(new java.awt.Color(50, 60, 69));
        mGradientButton1.setStartColor(new java.awt.Color(50, 60, 69));
        mGradientButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mGradientButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mGradientButton1MouseExited(evt);
            }
        });
        mGradientButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGradientButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addComponent(mGradientButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mGradientButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        dataPanel.add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 710, 100));

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tablePanel.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        tablePanel.setHorizontalScrollBar(null);

        tableTreinadores.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableTreinadores.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        tableTreinadores.setForeground(new java.awt.Color(72, 72, 72));
        tableTreinadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Especialidade", "Horário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTreinadores.setGridColor(new java.awt.Color(255, 255, 255));
        tableTreinadores.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableTreinadores.setRowHeight(30);
        tableTreinadores.setSelectionBackground(new java.awt.Color(205, 205, 205));
        tablePanel.setViewportView(tableTreinadores);
        if (tableTreinadores.getColumnModel().getColumnCount() > 0) {
            tableTreinadores.getColumnModel().getColumn(0).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(1).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(2).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(3).setResizable(false);
        }
        tableTreinadores.getTableHeader().setFont(new java.awt.Font("Nunito Bold", 0, 14));

        dataPanel.add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 670, 460));

        btnExit.setBackground(new java.awt.Color(255, 255, 255));
        btnExit.setForeground(new java.awt.Color(153, 153, 153));
        btnExit.setText(String.valueOf(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.CLOSE));
        btnExit.setBorderRadius(0);
        btnExit.setFont(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.ICON_FONT.deriveFont(20f));
        btnExit.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.FLAT);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        dataPanel.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 50, 40));

        cardPanel.add(dataPanel, "card2");

        formPanel.setBackground(new java.awt.Color(255, 255, 255));

        mButton4.setForeground(new java.awt.Color(153, 153, 153));
        mButton4.setText(String.valueOf(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.CLOSE));
        mButton4.setBorderRadius(0);
        mButton4.setFont(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.ICON_FONT.deriveFont(20f));
        mButton4.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.FLAT);
        mButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mButton4MouseExited(evt);
            }
        });
        mButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        txtNome.setFont(new java.awt.Font("Nunito", 0, 16)); // NOI18N
        txtNome.setLabel("Nome");
        txtNome.setDocument(new LimitText(50));
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
        });

        botCancelar.setBorder(null);
        botCancelar.setText("CANCELAR");
        botCancelar.setBorderRadius(50);
        botCancelar.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        botCancelar.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.RAISED);
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        botConfirmar.setBackground(new java.awt.Color(51, 51, 51));
        botConfirmar.setBorder(null);
        botConfirmar.setText("Confirmar");
        botConfirmar.setBorderRadius(50);
        botConfirmar.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        botConfirmar.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.RAISED);
        botConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botConfirmarActionPerformed(evt);
            }
        });

        profileImagePanel.setBackground(new java.awt.Color(255, 255, 255));
        profileImagePanel.setBorderRadius(120);
        profileImagePanel.setFillBackground(false);
        profileImagePanel.setFillImage(true);
        profileImagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profileImagePanelMouseEntered(evt);
            }
        });

        labelImagem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/profileImageHover.png"))); // NOI18N

        javax.swing.GroupLayout profileImagePanelLayout = new javax.swing.GroupLayout(profileImagePanel);
        profileImagePanel.setLayout(profileImagePanelLayout);
        profileImagePanelLayout.setHorizontalGroup(
            profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(profileImagePanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(labelImagem1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        profileImagePanelLayout.setVerticalGroup(
            profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
            .addGroup(profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(profileImagePanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(labelImagem1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        try {
            txtNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNascimento.setLabel("Data de Nascimento");
        txtNascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNascimentoFocusGained(evt);
            }
        });

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setLabel("Telefone");
        txtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefoneFocusGained(evt);
            }
        });

        txtNumero.setLabel("Numero");
        txtNumero.setDocument(new LimitText(5));
        txtNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroFocusGained(evt);
            }
        });

        txtCidade.setLabel("Cidade");
        txtCidade.setDocument(new LimitText(50));
        txtCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCidadeFocusGained(evt);
            }
        });

        txtBairro.setLabel("Bairro");
        txtBairro.setDocument(new LimitText(50));
        txtBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBairroFocusGained(evt);
            }
        });

        txtRua.setLabel("Rua");
        txtRua.setDocument(new LimitText(50));
        txtRua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRuaFocusGained(evt);
            }
        });

        txtLogin.setLabel("Login");
        txtLogin.setDocument(new LimitText(10));
        txtLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLoginFocusGained(evt);
            }
        });

        txtSenha.setLabel("Senha");
        txtSenha.setDocument(new LimitText(10));
        txtSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaFocusGained(evt);
            }
        });

        txtConfirmar.setLabel("Confirmar Senha");
        txtConfirmar.setDocument(new LimitText(10));
        txtConfirmar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmarFocusGained(evt);
            }
        });

        try {
            txtRg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtRg.setLabel("RG");
        txtRg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRgFocusGained(evt);
            }
        });

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setLabel("CPF");
        txtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCpfFocusGained(evt);
            }
        });

        txtEmail.setLabel("E-mail");
        txtEmail.setDocument(new LimitText(50));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
        });

        txtEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtEntrada.setLabel("Hr Entrada");
        txtEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEntradaFocusGained(evt);
            }
        });

        txtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtSaida.setLabel("Hr Saida");
        txtSaida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSaidaFocusGained(evt);
            }
        });

        txtSalario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtSalario.setLabel("Salario");
        txtSalario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalarioFocusGained(evt);
            }
        });

        txtCref.setLabel("CREF");
        txtCref.setDocument(new LimitText(11));
        txtCref.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCrefFocusGained(evt);
            }
        });

        txtEspecialidade.setLabel("Especialidade");
        txtCref.setDocument(new LimitText(11));
        txtEspecialidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEspecialidadeFocusGained(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(profileImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(formPanelLayout.createSequentialGroup()
                                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createSequentialGroup()
                                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addComponent(txtCref, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSalario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profileImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCref, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cardPanel.add(formPanel, "card3");

        bg.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 710, 670));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botMenuExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botMenuExcluirActionPerformed
        int linha = tableTreinadores.getSelectedRow();
        int codigo;
        Treinador sExcluir = null;
        if (menuSelection == 0) {
            if (linha != -1) {
                int colunas = tableTreinadores.getColumnCount();
                for (int x = 0; x < colunas; x++) {
                    if (tableTreinadores.getColumnName(x).equals("Código")) {
                        codigo = (int) tableTreinadores.getValueAt(linha, x);
                        sExcluir = cp.findByCodigo(codigo);

                    }
                }
                if (sExcluir != null) {
                    int op = JOptionPane.showConfirmDialog(null, "Deseja mesmo ecluir " + sExcluir.getNome() + "?");
                    if (op == 0) {
                        try {
                            cp.delete(sExcluir);
                            JOptionPane.showMessageDialog(null, "Excluido com sucesso");
                            DefaultTableModel dtm = (DefaultTableModel) tableTreinadores.getModel();
                            dtm.removeRow(linha);

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Este treinador possui registros vinculados.\nNão foi possível realizar a exclusao!");
                        }
                    }

                }

            } else {
                JOptionPane.showMessageDialog(null, "Selecione um treinador!");
            }
        } else {
            if (menuSelection == 1) {
                botMenuAdicionar.select();
                botMenuAlterar.unselect();
            } else {
                botMenuAlterar.select();
                botMenuAdicionar.unselect();
            }
        }

    }//GEN-LAST:event_botMenuExcluirActionPerformed

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setForeground(new java.awt.Color(50, 60, 69));
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setForeground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_btnExitMouseExited

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void mButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mButton4MouseEntered
        mButton4.setForeground(new java.awt.Color(50, 60, 69));
    }//GEN-LAST:event_mButton4MouseEntered

    private void mButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mButton4MouseExited
        mButton4.setForeground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_mButton4MouseExited

    private void mButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_mButton4ActionPerformed

    private void botMenuAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botMenuAdicionarActionPerformed
        if (menuSelection == 0) {
            menuSelection = 1;
            dataPanel.setVisible(false);
            formPanel.setVisible(true);
            selecionado = null;
            txtCpf.setEnabled(true);
            limparCampos();
        } else {
            if (menuSelection == 1) {
                botMenuAdicionar.select();
                botMenuAlterar.unselect();
            } else {
                botMenuAlterar.select();
                botMenuAdicionar.unselect();
            }
        }
    }//GEN-LAST:event_botMenuAdicionarActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        menuSelection = 0;
        botMenuAdicionar.unselect();
        botMenuAlterar.unselect();
        dataPanel.setVisible(true);
        formPanel.setVisible(false);
        limparCampos();
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botConfirmarActionPerformed
        Treinador p = new Treinador();
        byte[] imageInByte = null;
        Color errorColor = new Color(255, 0, 0);
        if (file != null) {
            imageInByte = new byte[(int) file.length()];
            FileInputStream fis = null;
            try {
                fis = new FileInputStream(file);
                fis.read(imageInByte);
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(FormTreinador.class.getName()).log(Level.SEVERE, null, ex);
                fis = null;
            }
        }
        boolean flag = false;
        String message = "";
        boolean passerr = false;
        if (txtNome.getText().equals("")) {
            txtNome.setForeground(errorColor);
            txtNome.repaint();
            flag = true;
        }
        if (txtTelefone.getText().equals("(  )     -    ")) {
            txtTelefone.setForeground(errorColor);
            flag = true;
        }
        if (txtNascimento.getText().equals("  /  /    ")) {
            txtNascimento.setForeground(errorColor);
            flag = true;
        }
        if (txtCpf.getText().equals("   .   .   -  ")) {
            txtCpf.setForeground(errorColor);
            flag = true;
        }
        if (txtRg.getText().equals("  .   .   - ")) {
            txtRg.setForeground(errorColor);
            flag = true;
        }
        if (txtEmail.getText().equals("")) {
            txtEmail.setForeground(errorColor);
            flag = true;
        }
        if (txtCidade.getText().equals("")) {
            txtCidade.setForeground(errorColor);
            flag = true;
        }
        if (txtBairro.getText().equals("")) {
            txtBairro.setForeground(errorColor);
            flag = true;
        }
        if (txtRua.getText().equals("")) {
            txtRua.setForeground(errorColor);
            flag = true;
        }
        if (txtNumero.getText().equals("")) {
            txtNumero.setForeground(errorColor);
            flag = true;
        }
        if (txtLogin.getText().equals("")) {
            txtLogin.setForeground(errorColor);
            flag = true;
        }
        if (txtSenha.getText().equals("") || txtSenha.getPassword().length < 4) {
            txtSenha.setForeground(errorColor);
            passerr = true;
            flag = true;
        }
        if (txtConfirmar.getText().equals("")) {
            txtConfirmar.setForeground(errorColor);
            flag = true;
        }
        if (txtEntrada.getText().equals("")) {
            txtEntrada.setForeground(errorColor);
            flag = true;
        }
        if (txtSaida.getText().equals("")) {
            txtSaida.setForeground(errorColor);
            flag = true;
        }
        if (txtSalario.getText().equals("")) {
            txtSalario.setForeground(errorColor);
            flag = true;
        }
        if (!txtSalario.getText().equals("") && Double.parseDouble(txtSalario.getText().replace(',', '.')) <= 0) {
            txtSalario.setForeground(errorColor);
            flag = true;
        }

        this.repaint();

        if (flag) {
            message = "Preencha todos os campos corretamente.";
        }

        if (passerr) {
            message += " A senha deve ter no mínimo 4 caracteres!";
        }

        if (!txtSenha.getText().equals(txtConfirmar.getText())) {
            message += "As senhas não correspondem";
            flag = true;
        }
        if (Conversoes.getDateOfTime(txtEntrada.getText()).after(Conversoes.getDateOfTime(txtSaida.getText()))) {
            txtEntrada.setForeground(Color.black);
            flag = true;
            message += "O horário de entrada deve anteceder o de saída";
        }

        if (!flag) {
            p.setNome(txtNome.getText());
            p.setCidade(txtCidade.getText());
            p.setBairro(txtBairro.getText());
            p.setCpf(txtCpf.getText());
            p.setDataNasc(Conversoes.getDateOfString(txtNascimento.getText()));
            p.setEmail(txtEmail.getText());
            p.setLogin(txtLogin.getText());
            p.setNumero(Integer.parseInt(txtNumero.getText()));
            p.setRg(txtRg.getText());
            p.setSenha(txtSenha.getText());
            p.setTelefone(txtTelefone.getText());
            p.setCREF(txtCref.getText());
            p.setHrEntrada(Conversoes.getDateOfTime(txtEntrada.getText()));
            p.setHrSaida(Conversoes.getDateOfTime(txtSaida.getText()));

            p.setSalario(Double.parseDouble(txtSalario.getText().replace(',', '.')));

            p.setRua(txtRua.getText());

            if (file != null) {
                p.setImagem(imageInByte);
            }
            if (selecionado == null) {
                try {

                    cp.persist(p);
                    message = "Cadastro efetuado com sucesso.";
                    limparCampos();
                } catch (DatabaseException ex) {
                    message = "Secretário já cadastrado.";
                }
            } else {
                p.setCodigo(selecionado.getCodigo());
                cp.alter(p);
                message = "Alteração efetuada com sucesso.";
                limparCampos();
            }
            menuSelection = 0;
            botMenuAdicionar.unselect();
            botMenuAlterar.unselect();
            dataPanel.setVisible(true);
            formPanel.setVisible(false);
            // view panel aviso, setColor aviso (danger/success) -> flag , setText(message)
        } else {
            // view panel aviso, setColor aviso (danger/success) -> flag , setText(message)
        }


    }//GEN-LAST:event_botConfirmarActionPerformed

    private void limparCampos() {

        txtNome.setText("");
        txtTelefone.setValue("");
        txtNascimento.setValue("");
        txtCpf.setValue("");
        txtRg.setText("");
        txtEmail.setText("");
        txtCidade.setText("");
        txtBairro.setText("");
        txtRua.setText("");
        txtNumero.setText("");
        txtLogin.setText("");
        txtSenha.setText("");
        txtConfirmar.setText("");
        txtEntrada.setText("");
        txtSaida.setText("");
        txtSalario.setText("");
        txtCref.setText("");

        String imagePath = "/com/hq/swingmaterialdesign/images/profile.jpg";
        ImageIcon icon = new ImageIcon(getClass().getResource(imagePath));
        Image img = icon.getImage();
        profileImagePanel.setImage(img);

    }
    private void profileImagePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileImagePanelMouseEntered
        labelImagem1.setVisible(true);
    }//GEN-LAST:event_profileImagePanelMouseEntered

    private void botMenuAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botMenuAlterarActionPerformed
        int linha = tableTreinadores.getSelectedRow();
        int codigo;
        if (menuSelection == 0) {
            menuSelection = 1;
            if (linha != -1) {
                int colunas = tableTreinadores.getColumnCount();
                for (int x = 0; x < colunas; x++) {
                    if (tableTreinadores.getColumnName(x).equals("Código")) {
                        codigo = (int) tableTreinadores.getValueAt(linha, x);
                        System.out.println(codigo);
                        selecionado = cp.findByCodigo(codigo);

                        setTreinador();
                        dataPanel.setVisible(false);
                        formPanel.setVisible(true);
                    }
                }

            } else {
                botMenuAlterar.unselect();
                JOptionPane.showMessageDialog(null, "Selecione um treinador!");
            }
        } else {
            if (menuSelection == 1) {
                botMenuAdicionar.select();
                botMenuAlterar.unselect();
            } else {
                botMenuAlterar.select();
                botMenuAdicionar.unselect();
            }
        }

    }//GEN-LAST:event_botMenuAlterarActionPerformed

    private void mGradientButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mGradientButton1MouseEntered
        mGradientButton1.setForeground(Color.white);
    }//GEN-LAST:event_mGradientButton1MouseEntered

    private void mGradientButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mGradientButton1MouseExited
        mGradientButton1.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_mGradientButton1MouseExited

    private void mGradientButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mGradientButton1ActionPerformed
        atualizaTabela();
    }//GEN-LAST:event_mGradientButton1ActionPerformed

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        txtNome.setForeground(Color.black);
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtTelefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefoneFocusGained
        txtTelefone.setForeground(Color.black);
    }//GEN-LAST:event_txtTelefoneFocusGained

    private void txtNascimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNascimentoFocusGained
        txtNascimento.setForeground(Color.black);
    }//GEN-LAST:event_txtNascimentoFocusGained

    private void txtCpfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCpfFocusGained
        txtCpf.setForeground(Color.black);
    }//GEN-LAST:event_txtCpfFocusGained

    private void txtRgFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRgFocusGained
        txtRg.setForeground(Color.black);
    }//GEN-LAST:event_txtRgFocusGained

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        txtEmail.setForeground(Color.black);
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtCidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCidadeFocusGained
        txtCidade.setForeground(Color.black);
    }//GEN-LAST:event_txtCidadeFocusGained

    private void txtBairroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBairroFocusGained
        txtBairro.setForeground(Color.black);
    }//GEN-LAST:event_txtBairroFocusGained

    private void txtRuaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRuaFocusGained
        txtRua.setForeground(Color.black);
    }//GEN-LAST:event_txtRuaFocusGained

    private void txtNumeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFocusGained
        txtNumero.setForeground(Color.black);
    }//GEN-LAST:event_txtNumeroFocusGained

    private void txtLoginFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLoginFocusGained
        txtLogin.setForeground(Color.black);
    }//GEN-LAST:event_txtLoginFocusGained

    private void txtSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFocusGained
        txtSenha.setForeground(Color.black);
    }//GEN-LAST:event_txtSenhaFocusGained

    private void txtConfirmarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmarFocusGained
        txtConfirmar.setForeground(Color.black);
    }//GEN-LAST:event_txtConfirmarFocusGained

    private void txtEspecialidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEspecialidadeFocusGained
        txtEspecialidade.setForeground(Color.black);
    }//GEN-LAST:event_txtEspecialidadeFocusGained

    private void txtCrefFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCrefFocusGained
        txtCref.setForeground(Color.black);
    }//GEN-LAST:event_txtCrefFocusGained

    private void txtEntradaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEntradaFocusGained
        txtEntrada.setForeground(Color.black);
    }//GEN-LAST:event_txtEntradaFocusGained

    private void txtSaidaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSaidaFocusGained
        txtSaida.setForeground(Color.black);
    }//GEN-LAST:event_txtSaidaFocusGained

    private void txtSalarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalarioFocusGained
        txtSalario.setForeground(Color.black);
    }//GEN-LAST:event_txtSalarioFocusGained
    private void setTreinador() {

        if (selecionado.getImagem().length > 0) {
            ImageIcon im = new ImageIcon(selecionado.getImagem());
            profileImagePanel.setImage(im.getImage());
            profileImagePanel.repaint();
        }

        txtNome.setText(selecionado.getNome());
        txtTelefone.setText(selecionado.getTelefone());
        txtNascimento.setText(Conversoes.getDateFormatedToString(selecionado.getDataNasc()));
        txtCpf.setText(selecionado.getCpf());
        txtCpf.setEnabled(false);
        txtRg.setText(selecionado.getRg());
        txtEmail.setText(selecionado.getEmail());
        txtCidade.setText(selecionado.getCidade());
        txtBairro.setText(selecionado.getBairro());
        txtRua.setText(selecionado.getRua());
        txtNumero.setText(Integer.toString(selecionado.getNumero()));
        txtLogin.setText(selecionado.getLogin());
        txtEntrada.setText(Conversoes.getStringOfTime(selecionado.getHrEntrada()));
        txtSaida.setText(Conversoes.getStringOfTime(selecionado.getHrSaida()));
        txtSalario.setText(Double.toString(selecionado.getSalario()));
        txtEspecialidade.setText(selecionado.getEspecialidade());
        txtCref.setText(selecionado.getCREF());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormTreinador dialog = new FormTreinador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private com.hq.swingmaterialdesign.materialdesign.MButton botCancelar;
    private com.hq.swingmaterialdesign.materialdesign.MButton botConfirmar;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton botMenuAdicionar;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton botMenuAlterar;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton botMenuExcluir;
    private com.hq.swingmaterialdesign.materialdesign.MButton btnExit;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelImagem1;
    private com.hq.swingmaterialdesign.materialdesign.MButton mButton4;
    private com.hq.swingmaterialdesign.materialdesign.MGradientButton mGradientButton1;
    private com.hq.swingmaterialdesign.materialdesign.MGradientPanel profileImagePanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JScrollPane tablePanel;
    private javax.swing.JTable tableTreinadores;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtBairro;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtCidade;
    private com.hq.swingmaterialdesign.materialdesign.MPasswordField txtConfirmar;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtCpf;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtCref;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtEmail;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtEntrada;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtEspecialidade;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtLogin;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtNascimento;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtNome;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtNumero;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtPesquisa;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtRg;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtRua;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtSaida;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtSalario;
    private com.hq.swingmaterialdesign.materialdesign.MPasswordField txtSenha;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}

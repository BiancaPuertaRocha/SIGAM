/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleTreinador;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Treinador;
import org.eclipse.persistence.exceptions.DatabaseException;
import util.Conversoes;
import util.LimitPassword;
import util.LimitTextfield;

/**
 *
 * @author abner
 */
public class FormTreinador extends javax.swing.JDialog {
    
    private ControleTreinador cp = new ControleTreinador();
    private File file;
    private ArrayList<Treinador> listaPesquisa = new ArrayList();
    private Treinador selecionado;
    
    public FormTreinador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        this.setLocationRelativeTo(null);
        labelImagem.setVisible(false);
    }
    
    private void atualizaTabela() {
        listaPesquisa.clear();
        listaPesquisa.addAll(cp.findByNome(txtPesquisa.getText()));
        DefaultTableModel dtm = (DefaultTableModel) tableTreinadores.getModel();
        dtm.setNumRows(0);
        for (Treinador s : listaPesquisa) {
            dtm.addRow(new Object[]{s.getCodigo(), s.getNome(), s.getEspecialidade(), Conversoes.getStringOfTime(s.getHrEntrada()) + " - " + Conversoes.getStringOfTime(s.getHrSaida())});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mToggleButton1 = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mToggleButton2 = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mToggleButton3 = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        cardPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        txtPesquisa = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        mButton1 = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tablePanel = new javax.swing.JScrollPane();
        tableTreinadores = new javax.swing.JTable();
        btnExit = new com.hq.swingmaterialdesign.materialdesign.MButton();
        formPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        mButton4 = new com.hq.swingmaterialdesign.materialdesign.MButton();
        txtNome = new LimitTextfield(50);
        botCancelar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        botConfirmar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        profileImagePanel = new com.hq.swingmaterialdesign.materialdesign.MGradientPanel();
        labelImagem = new javax.swing.JLabel();
        txtNascimento = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtTelefone = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtNumero = new LimitTextfield(5);
        txtCidade = new LimitTextfield(50);
        txtBairro = new LimitTextfield(50);
        txtRua = new LimitTextfield(50);
        txtLogin = new LimitTextfield(10);
        txtSenha = new LimitPassword(10);
        txtConfirmar = new LimitPassword(10);
        txtRg = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtCpf = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtEmail = new LimitTextfield(50);
        txtEspecialidade = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        txtEntrada = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtSaida = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtSalario = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        txtCref = new LimitTextfield(11);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(37, 46, 55));
        sidePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TREINADOR");
        sidePanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 26, 230, 40));

        mToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        mToggleButton1.setText("Excluir");
        mToggleButton1.setEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton1.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        mToggleButton1.setHoverEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton1.setHoverStartColor(new java.awt.Color(0, 153, 153));
        mToggleButton1.setSelectedColor(new java.awt.Color(0, 153, 153));
        mToggleButton1.setStartColor(new java.awt.Color(37, 46, 55));
        mToggleButton1.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        mToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mToggleButton1ActionPerformed(evt);
            }
        });
        sidePanel.add(mToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 230, 50));

        mToggleButton2.setForeground(new java.awt.Color(255, 255, 255));
        mToggleButton2.setText("Adicionar");
        mToggleButton2.setEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton2.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        mToggleButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        mToggleButton2.setHoverEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton2.setHoverStartColor(new java.awt.Color(0, 153, 153));
        mToggleButton2.setSelectedColor(new java.awt.Color(0, 153, 153));
        mToggleButton2.setStartColor(new java.awt.Color(37, 46, 55));
        mToggleButton2.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        mToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mToggleButton2ActionPerformed(evt);
            }
        });
        sidePanel.add(mToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 230, 50));

        mToggleButton3.setForeground(new java.awt.Color(255, 255, 255));
        mToggleButton3.setText("Alterar");
        mToggleButton3.setEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton3.setFont(new java.awt.Font("Nunito ExtraBold", 0, 14)); // NOI18N
        mToggleButton3.setHoverEndColor(new java.awt.Color(37, 46, 55));
        mToggleButton3.setHoverStartColor(new java.awt.Color(0, 153, 153));
        mToggleButton3.setSelectedColor(new java.awt.Color(0, 153, 153));
        mToggleButton3.setStartColor(new java.awt.Color(37, 46, 55));
        mToggleButton3.setType(com.hq.swingmaterialdesign.materialdesign.MToggleButton.Type.FLAT);
        mToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mToggleButton3ActionPerformed(evt);
            }
        });
        sidePanel.add(mToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 230, 50));

        bg.add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 670));

        cardPanel.setLayout(new java.awt.CardLayout());

        dataPanel.setBackground(new java.awt.Color(255, 255, 255));
        dataPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchPanel.setBackground(new java.awt.Color(50, 60, 69));

        txtPesquisa.setBackground(new java.awt.Color(50, 60, 69));
        txtPesquisa.setForeground(new java.awt.Color(240, 240, 240));
        txtPesquisa.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        txtPesquisa.setLabel("Pesquisar");
        txtPesquisa.setSelectionColor(new java.awt.Color(0, 153, 153));

        mButton1.setText("Pesquisar");
        mButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        dataPanel.add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 710, 100));

        tablePanel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tablePanel.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        tablePanel.setHorizontalScrollBar(null);

        tableTreinadores.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableTreinadores.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        tableTreinadores.setForeground(new java.awt.Color(72, 72, 72));
        tableTreinadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Especialidade", "Horário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTreinadores.setGridColor(new java.awt.Color(255, 255, 255));
        tableTreinadores.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableTreinadores.setRowHeight(30);
        tableTreinadores.setSelectionBackground(new java.awt.Color(205, 205, 205));
        tablePanel.setViewportView(tableTreinadores);
        if (tableTreinadores.getColumnModel().getColumnCount() > 0) {
            tableTreinadores.getColumnModel().getColumn(0).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(1).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(2).setResizable(false);
            tableTreinadores.getColumnModel().getColumn(3).setResizable(false);
        }
        tableTreinadores.getTableHeader().setFont(new java.awt.Font("Nunito Bold", 0, 14));

        dataPanel.add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 670, 460));

        btnExit.setBackground(new java.awt.Color(255, 255, 255));
        btnExit.setForeground(new java.awt.Color(153, 153, 153));
        btnExit.setText(String.valueOf(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.CLOSE));
        btnExit.setBorderRadius(0);
        btnExit.setFont(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.ICON_FONT.deriveFont(20f));
        btnExit.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.FLAT);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        dataPanel.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 50, 40));

        cardPanel.add(dataPanel, "card2");

        formPanel.setBackground(new java.awt.Color(255, 255, 255));

        mButton4.setForeground(new java.awt.Color(153, 153, 153));
        mButton4.setText(String.valueOf(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.CLOSE));
        mButton4.setBorderRadius(0);
        mButton4.setFont(com.hq.swingmaterialdesign.materialdesign.resource.MaterialIcons.ICON_FONT.deriveFont(20f));
        mButton4.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.FLAT);
        mButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mButton4MouseExited(evt);
            }
        });
        mButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        txtNome.setFont(new java.awt.Font("Nunito", 0, 16)); // NOI18N
        txtNome.setLabel("Nome");
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        botCancelar.setBorder(null);
        botCancelar.setText("CANCELAR");
        botCancelar.setBorderRadius(50);
        botCancelar.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        botCancelar.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.RAISED);
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        botConfirmar.setBackground(new java.awt.Color(51, 51, 51));
        botConfirmar.setBorder(null);
        botConfirmar.setText("Confirmar");
        botConfirmar.setBorderRadius(50);
        botConfirmar.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        botConfirmar.setType(com.hq.swingmaterialdesign.materialdesign.MButton.Type.RAISED);
        botConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botConfirmarActionPerformed(evt);
            }
        });

        profileImagePanel.setBackground(new java.awt.Color(255, 255, 255));
        profileImagePanel.setBorderRadius(120);
        profileImagePanel.setFillBackground(false);
        profileImagePanel.setFillImage(true);
        profileImagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profileImagePanelMouseEntered(evt);
            }
        });

        labelImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelImagemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelImagemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelImagemMouseExited(evt);
            }
        });

        javax.swing.GroupLayout profileImagePanelLayout = new javax.swing.GroupLayout(profileImagePanel);
        profileImagePanel.setLayout(profileImagePanelLayout);
        profileImagePanelLayout.setHorizontalGroup(
            profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        profileImagePanelLayout.setVerticalGroup(
            profileImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );

        try {
            txtNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNascimento.setLabel("Data de Nascimento");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setLabel("Telefone");

        txtNumero.setLabel("Numero");
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        txtCidade.setLabel("Cidade");
        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCidadeKeyTyped(evt);
            }
        });

        txtBairro.setLabel("Bairro");
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroKeyTyped(evt);
            }
        });

        txtRua.setLabel("Rua");
        txtRua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRuaKeyTyped(evt);
            }
        });

        txtLogin.setLabel("Login");
        txtLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLoginKeyTyped(evt);
            }
        });

        txtSenha.setLabel("Senha");
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSenhaKeyTyped(evt);
            }
        });

        txtConfirmar.setLabel("Confirmar Senha");
        txtConfirmar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConfirmarKeyTyped(evt);
            }
        });

        try {
            txtRg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtRg.setLabel("RG");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setLabel("CPF");

        txtEmail.setLabel("E-mail");
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtEspecialidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrativo", "Almoxarifado", "Financeiro", "Recursos Humanos" }));

        txtEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtEntrada.setLabel("Hr Entrada");

        txtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        txtSaida.setLabel("Hr Saida");

        txtSalario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtSalario.setLabel("Salario");

        txtCref.setLabel("CREF");

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSalario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(profileImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(formPanelLayout.createSequentialGroup()
                                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createSequentialGroup()
                                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(formPanelLayout.createSequentialGroup()
                                        .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCref, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profileImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEspecialidade, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(txtCref, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cardPanel.add(formPanel, "card3");

        bg.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 710, 670));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mToggleButton1ActionPerformed
        int linha = tableTreinadores.getSelectedRow();
        int codigo;
        Treinador sExcluir = null;
        if (linha != -1) {
            int colunas = tableTreinadores.getColumnCount();
            for (int x = 0; x < colunas; x++) {
                if (tableTreinadores.getColumnName(x).equals("Código")) {
                    codigo = (int) tableTreinadores.getValueAt(linha, x);
                    sExcluir = cp.findByCodigo(codigo);
                    
                }
            }
            if (sExcluir != null) {
                int op = JOptionPane.showConfirmDialog(null, "Deseja mesmo ecluir " + sExcluir.getNome() + "?");
                if (op == 0) {
                    try {
                        cp.delete(sExcluir);
                        JOptionPane.showMessageDialog(null, "Excluido com sucesso");
                        DefaultTableModel dtm = (DefaultTableModel) tableTreinadores.getModel();
                        dtm.removeRow(linha);
                        
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Este treinador possui registros vinculados.\nNão foi possível realizar a exclusao!");
                    }
                }
                
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um treinador!");
        }
    }//GEN-LAST:event_mToggleButton1ActionPerformed

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setForeground(new java.awt.Color(50, 60, 69));
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setForeground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_btnExitMouseExited

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void mButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mButton4MouseEntered
        mButton4.setForeground(new java.awt.Color(50, 60, 69));
    }//GEN-LAST:event_mButton4MouseEntered

    private void mButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mButton4MouseExited
        mButton4.setForeground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_mButton4MouseExited

    private void mButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_mButton4ActionPerformed

    private void mToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mToggleButton2ActionPerformed
        dataPanel.setVisible(false);
        formPanel.setVisible(true);
        selecionado = null;
        txtCpf.setEnabled(true);
        limparCampos();
    }//GEN-LAST:event_mToggleButton2ActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        mToggleButton2.unselect();
        dataPanel.setVisible(true);
        formPanel.setVisible(false);
        limparCampos();
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botConfirmarActionPerformed
        Treinador p = new Treinador();
        byte[] imageInByte = null;
        if (file != null) {
            imageInByte = new byte[(int) file.length()];
            FileInputStream fis = null;
            try {
                fis = new FileInputStream(file);
                fis.read(imageInByte);
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(FormTreinador.class.getName()).log(Level.SEVERE, null, ex);
                fis = null;
            }
        }
        if (!txtNome.getText().equals("")) {
            if (!txtTelefone.getText().equals("(  )     -    ")) {
                if (!txtNascimento.getText().equals("  /  /    ")) {
                    if (!txtCpf.getText().equals("   .   .   -  ")) {
                        if (!txtEmail.getText().equals("")) {
                            if (!txtCidade.getText().equals("")) {
                                if (!txtBairro.getText().equals("")) {
                                    if (!txtRua.getText().equals("")) {
                                        if (!txtNumero.getText().equals("")) {
                                            if (!txtLogin.getText().equals("")) {
                                                if (!txtSenha.getText().equals("") && txtSenha.getPassword().length >= 4) {
                                                    if (!txtConfirmar.getText().equals("")) {
                                                        if (!txtEntrada.getText().equals("")) {
                                                            if (!txtSaida.getText().equals("")) {
                                                                if (!txtSalario.getText().equals("") && Double.parseDouble(txtSalario.getText()) > 0) {
                                                                    if (txtSenha.getText().equals(txtConfirmar.getText())) {
                                                                        if (Conversoes.getDateOfTime(txtEntrada.getText()).after(Conversoes.getDateOfTime(txtSaida.getText()))) {
                                                                            JOptionPane.showMessageDialog(null, "A entrada precisa ser antes da saida do funcionário!");
                                                                            txtEntrada.requestFocus();
                                                                        } else {
                                                                            if (!txtCref.getText().equals("")) {
                                                                                p.setNome(txtNome.getText());
                                                                                p.setCidade(txtCidade.getText());
                                                                                p.setBairro(txtBairro.getText());
                                                                                p.setCpf(txtCpf.getText());
                                                                                p.setDataNasc(Conversoes.getDateOfString(txtNascimento.getText()));
                                                                                p.setEmail(txtEmail.getText());
                                                                                p.setLogin(txtLogin.getText());
                                                                                p.setNumero(Integer.parseInt(txtNumero.getText()));
                                                                                p.setRg(txtRg.getText());
                                                                                p.setSenha(txtSenha.getText());
                                                                                p.setTelefone(txtTelefone.getText());
                                                                                p.setEspecialidade(txtEspecialidade.getSelectedItem().toString());
                                                                                p.setHrEntrada(Conversoes.getDateOfTime(txtEntrada.getText()));
                                                                                p.setHrSaida(Conversoes.getDateOfTime(txtSaida.getText()));
                                                                                p.setSalario(Double.parseDouble(txtSalario.getText()));
                                                                                p.setCREF(txtCref.getText());
                                                                                p.setRua(txtRua.getText());
                                                                                
                                                                                if (file != null) {
                                                                                    p.setImagem(imageInByte);
                                                                                }
                                                                                if (selecionado == null) {
                                                                                    try {
                                                                                        
                                                                                        cp.persist(p);
                                                                                        JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!!");
                                                                                        limparCampos();
                                                                                    } catch (DatabaseException ex) {
                                                                                        JOptionPane.showMessageDialog(null, "Secretário ja cadastrado!");
                                                                                    }
                                                                                } else {
                                                                                    p.setCodigo(selecionado.getCodigo());
                                                                                    cp.alter(p);
                                                                                    JOptionPane.showMessageDialog(null, "Editado com sucesso!!");
                                                                                    limparCampos();
                                                                                }
                                                                                dataPanel.setVisible(true);
                                                                                formPanel.setVisible(false);
                                                                            } else {
                                                                                JOptionPane.showMessageDialog(null, "Digite o CREF!");
                                                                                txtCref.requestFocus();
                                                                            }
                                                                        }
                                                                    } else {
                                                                        JOptionPane.showMessageDialog(null, "Senhas não confirmam!");
                                                                        txtConfirmar.requestFocus();
                                                                    }
                                                                    
                                                                } else {
                                                                    JOptionPane.showMessageDialog(null, "Digite um salário válido!");
                                                                    txtSalario.requestFocus();
                                                                }
                                                                
                                                            } else {
                                                                JOptionPane.showMessageDialog(null, "Digite um horário de saída!");
                                                                txtSaida.requestFocus();
                                                                
                                                            }
                                                            
                                                        } else {
                                                            JOptionPane.showMessageDialog(null, "Digite um horário de entrada!");
                                                            txtEntrada.requestFocus();
                                                            
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog(null, "Confirme sua senha");
                                                        txtConfirmar.requestFocus();
                                                        
                                                    }
                                                    
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Digite uma senha com mais de 4 caracteres!");
                                                    txtSenha.requestFocus();
                                                    
                                                }
                                                
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Digite um login!");
                                                txtLogin.requestFocus();
                                                
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Digite um numero!");
                                            txtNumero.requestFocus();
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Digite uma rua!");
                                        txtRua.requestFocus();
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Digite um bairro!");
                                    txtBairro.requestFocus();
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Digite uma cidade!");
                                txtCidade.requestFocus();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Digite um e-mail!");
                            txtEmail.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Digite um CPF!");
                        txtCpf.requestFocus();
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Digite uma data de nascimento!");
                    txtNascimento.requestFocus();
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Digite um telefone!");
                txtTelefone.requestFocus();
            }
        } else {
            
            JOptionPane.showMessageDialog(null, "Digite um nome!");
            txtNome.requestFocus();
        }
        

    }//GEN-LAST:event_botConfirmarActionPerformed
    private void limparCampos() {
        
        
        txtNome.setText("");
        txtTelefone.setValue("");
        txtNascimento.setValue("");
        txtCpf.setValue("");
        txtRg.setText("");
        txtEmail.setText("");
        txtCidade.setText("");
        txtBairro.setText("");
        txtRua.setText("");
        txtNumero.setText("");
        txtLogin.setText("");
        txtSenha.setText("");
        txtConfirmar.setText("");
        txtEntrada.setText("");
        txtSaida.setText("");
        txtSalario.setText("");
        txtCref.setText("");
        
    }
    private void labelImagemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImagemMouseEntered

    }//GEN-LAST:event_labelImagemMouseEntered

    private void labelImagemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImagemMouseExited
        labelImagem.setVisible(false);
    }//GEN-LAST:event_labelImagemMouseExited

    private void profileImagePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileImagePanelMouseEntered
        labelImagem.setVisible(true);
    }//GEN-LAST:event_profileImagePanelMouseEntered

    private void labelImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelImagemMouseClicked
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Selecione a imagem de perfil");
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        FileNameExtensionFilter ext = new FileNameExtensionFilter("Imagem", "png", "jpg", "bmp");
        
        jfc.setFileFilter(ext);
        
        int r = jfc.showOpenDialog(this);
        
        if (r == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();
            Image image = null;
            try {
                image = ImageIO.read(file);
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Impossível carregar imagem!");
            } finally {
               // System.out.println(file.getAbsolutePath());
                profileImagePanel.setImage(image);
                profileImagePanel.repaint();
            }
        }
        

    }//GEN-LAST:event_labelImagemMouseClicked

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        ((LimitTextfield) txtNome).insertString();
    }//GEN-LAST:event_txtNomeKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        ((LimitTextfield) txtEmail).insertString();
    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtCidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyTyped
        ((LimitTextfield) txtCidade).insertString();
    }//GEN-LAST:event_txtCidadeKeyTyped

    private void txtBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyTyped
        ((LimitTextfield) txtBairro).insertString();
    }//GEN-LAST:event_txtBairroKeyTyped

    private void txtRuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRuaKeyTyped
        ((LimitTextfield) txtRua).insertString();
    }//GEN-LAST:event_txtRuaKeyTyped

    private void txtLoginKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoginKeyTyped
        ((LimitTextfield) txtLogin).insertString();
    }//GEN-LAST:event_txtLoginKeyTyped

    private void mButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButton1ActionPerformed
        atualizaTabela();
    }//GEN-LAST:event_mButton1ActionPerformed

    private void mToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mToggleButton3ActionPerformed
        int linha = tableTreinadores.getSelectedRow();
        int codigo;
        if (linha != -1) {
            int colunas = tableTreinadores.getColumnCount();
            for (int x = 0; x < colunas; x++) {
                if (tableTreinadores.getColumnName(x).equals("Código")) {
                    codigo = (int) tableTreinadores.getValueAt(linha, x);
                    System.out.println(codigo);
                    selecionado = cp.findByCodigo(codigo);
                    
                    setTreinador();
                    dataPanel.setVisible(false);
                    formPanel.setVisible(true);
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um treinador!");
        }
    }//GEN-LAST:event_mToggleButton3ActionPerformed

    private void txtConfirmarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmarKeyTyped
       ((LimitPassword)txtConfirmar).insertString();
    }//GEN-LAST:event_txtConfirmarKeyTyped

    private void txtSenhaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyTyped
       ((LimitPassword)txtSenha).insertString();
    }//GEN-LAST:event_txtSenhaKeyTyped

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
      ((LimitTextfield)txtNumero).onlyNumbers(evt);
    }//GEN-LAST:event_txtNumeroKeyTyped
    private void setTreinador() {
        
        if (selecionado.getImagem().length > 0) {
            ImageIcon im = new ImageIcon(selecionado.getImagem());
            profileImagePanel.setImage(im.getImage());
            profileImagePanel.repaint();
        }
        
        txtNome.setText(selecionado.getNome());
        txtTelefone.setText(selecionado.getTelefone());
        txtNascimento.setText(Conversoes.getDateFormatedToString(selecionado.getDataNasc()));
        txtCpf.setText(selecionado.getCpf());
        txtCpf.setEnabled(false);
        txtRg.setText(selecionado.getRg());
        txtEmail.setText(selecionado.getEmail());
        txtCidade.setText(selecionado.getCidade());
        txtBairro.setText(selecionado.getBairro());
        txtRua.setText(selecionado.getRua());
        txtNumero.setText(Integer.toString(selecionado.getNumero()));
        txtLogin.setText(selecionado.getLogin());
        txtEntrada.setText(Conversoes.getStringOfTime(selecionado.getHrEntrada()));
        txtSaida.setText(Conversoes.getStringOfTime(selecionado.getHrSaida()));
        txtSalario.setText(Double.toString(selecionado.getSalario()));
        txtEspecialidade.setSelectedItem(selecionado.getEspecialidade());
        txtCref.setText(selecionado.getCREF());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTreinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormTreinador dialog = new FormTreinador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private com.hq.swingmaterialdesign.materialdesign.MButton botCancelar;
    private com.hq.swingmaterialdesign.materialdesign.MButton botConfirmar;
    private com.hq.swingmaterialdesign.materialdesign.MButton btnExit;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelImagem;
    private com.hq.swingmaterialdesign.materialdesign.MButton mButton1;
    private com.hq.swingmaterialdesign.materialdesign.MButton mButton4;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mToggleButton1;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mToggleButton2;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mToggleButton3;
    private com.hq.swingmaterialdesign.materialdesign.MGradientPanel profileImagePanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JScrollPane tablePanel;
    private javax.swing.JTable tableTreinadores;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtBairro;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtCidade;
    private com.hq.swingmaterialdesign.materialdesign.MPasswordField txtConfirmar;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtCpf;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtCref;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtEmail;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtEntrada;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox txtEspecialidade;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtLogin;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtNascimento;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtNome;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtNumero;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtPesquisa;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtRg;
    private com.hq.swingmaterialdesign.materialdesign.MTextField txtRua;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtSaida;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtSalario;
    private com.hq.swingmaterialdesign.materialdesign.MPasswordField txtSenha;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
